/*
* jQuery spiral image gallery plugin
*
* url		http://www.amdonnelly.co.uk/experiments/spiral-gallery-plugin
* author	Alan Donnelly 2012
* version	0.5
* license	MIT and GPL licenses
*/
(function (b) { b.fn.SpiralImages = function (m) { var g = { options: { rotateImages: !1, useModal: !1 }, images: { list: {}, count: 0, current: 0, openCurrent: !1 }, animation: { animate: !1, fps: 30, speed: 0, target: 0 }, imageMod: { space: 8, opacity: 0.005, scale: 0.005, position: 0, move: 0.9 }, spiral: { centerX: 0, centerY: 0, radius: 0, sides: 225, coils: 3, rotation: 0, shrinkRadius: 60 }, borders: { normal: { color: "#596269", width: 5 }, hover: { color: "#006699", width: 10 }, selected: { color: "#000000", width: 10}} }; return this.each(function () { function x(a) { jQuery.parseJSON(m); for (var f in m) for (var e in m[f]) if (null != g[f][e]) switch (b.type(g[f][e])) { case "string": g[f][e] = m[f][e]; break; case "boolean": g[f][e] = "true" == String(m[f][e]).toLowerCase() ? !0 : !1; break; case "number": g[f][e] = parseFloat(m[f][e]) } y = a.find("img").length; 0 == _spiral.radius && (_spiral.radius = k.width() < k.height() ? k.width() / 2 : k.height() / 2); _spiral.shrinkRadius && (_spiral.radius -= _spiral.shrinkRadius); 0 == _spiral.centerX && (_spiral.centerX = k.width() / 2); 0 == _spiral.centerY && (_spiral.centerY = k.height() / 2); z = _spiral.radius / _spiral.sides; A = _spiral.coils / _spiral.sides; s = 2 * A * Math.PI; _spiral.rotation *= 2 * Math.PI; _animation.speed = 1E3 / _animation.fps; b(window).mousemove(function (a) { _mouse.x = a.pageX; _mouse.y = a.pageY }); o = new Kinetic.Stage({ container: k.attr("id"), width: k.width(), height: k.height() }); t = new Kinetic.Layer; a.find("img").each(function () { _images.list[_images.count] = new K({ parent: k, layer: t, image: b(this), index: _images.count, containerChildren: y }); _images.count++ }); o.add(t) } function K(a) { this._height = this._width = this._z = this._y = this._x = 0; this._scale = 1; this._position = 0; this._index; this._rotation = this._opacity = 0; this._image; this._element; this._top = !1; this.spiral_content; this.spiral_media; this.media; this.start = { width: 0, height: 0, z: 0 }; this.SetImagePosition = function () { this._position = this._index * _imageMod.space - _imageMod.position; this._top = 0 == this._position ? !0 : !1; return !1 }; this.SetImageCoords = function () { var a = _spiral.radius - this._position * z, b = this._position * s + _spiral.rotation; this._x = _spiral.centerX + Math.cos(b) * a; this._y = _spiral.centerY + Math.sin(b) * a; this._element.setX(this._x); this._element.setY(this._y); return !1 }; this.SetImageScale = function () { this._scale = 0 < this._position ? 1 - B(_imageMod.scale, this._position) : 1; 0 > this._scale && (this._scale = 0); this._element.setScale(this._scale); return !1 }; this.SetImageOpacity = function () { var a = B(_imageMod.opacity, this._position); 0 > a && (a = 0); 1 < a && (a = 1); this._opacity = 0 < this._position ? 1 - a : 1; 0 > this._opacity && (this._opacity = 0); 0 > this._position && (this._opacity = 1 - -1 * this._position / 10, 1 < this._opacity ? this._opacity = 1 : 0 > this._opacity && (this._opacity = 0)); this._element.setOpacity(this._opacity); 0 >= this._opacity ? this._element.hide() : this._element.show(); return !1 }; this.SetImageRotation = function () { _options.rotateImages && (this._rotation = this._position * s + _spiral.rotation, this._element.setRotation(this._rotation)) }; this.ResetImageOpacity = function () { this._opacity = 1; return !1 }; this.SetStroke = function (a) { a || (a = "normal"); if ("hover" == a && 0 == this._position) return !1; "normal" == a && 0 == this._position && (a = "selected"); _borders[a] && (this._element.setStroke(_borders[a].color), this._element.setStrokeWidth(_borders[a].width)) }; this.SetZIndex = function () { 0 == this._position ? this._element.moveToTop() : this._element.setZIndex(this._z) }; this.RefreshImage = function () { this.SetImagePosition(); this.SetImageCoords(); this.SetImageScale(); this.SetImageOpacity(); this.SetImageRotation(); this.SetStroke(); this.SetZIndex(); return !1 }; this.MouseOverDo = function () { this._element.setScale(1); this._element.setOpacity(1); this._element.moveToTop(); this._element.setRotation(0); this.SetStroke("hover"); document.body.style.cursor = "pointer"; o.draw() }; this.MouseOutDo = function () { this._element.setScale(this._scale); this._element.setOpacity(this._opacity); this.SetZIndex(); this.SetImageRotation(); this.SetStroke(); document.body.style.cursor = "default"; o.draw() }; this.MouseClickDo = function () { }; this.Init = function () { this._width = this._image.width; this._height = this._image.height; this._position = 0; this._index = a.index; this._z = -this._index - 2; this.SetImagePosition(); this._element = new Kinetic.Image({ id: this._index, image: this._image, x: this._x, y: this._y, width: this._width, height: this._height }); this._element.setOffset(this._image.width / 2, this._image.height / 2); this.SetImageCoords(); this.SetImageScale(); this.SetImageOpacity(); this.SetStroke(); this._element.on("mouseover", function () { _images.list[this.attrs.id].MouseOverDo() }); this._element.on("mouseout", function () { _images.list[this.attrs.id].MouseOutDo() }); this._element.on("click", function () { var a = this.attrs.id; C(a); _images.list[a].MouseClickDo() }); a.layer.add(this._element); this.SetZIndex(); this.SetImageRotation() }; this.spiral_content = a.image.attr("spiral-content"); this.spiral_media = a.image.attr("spiral-media"); this._image = new Image; this._image.src = a.image.attr("src"); this._image.onload = this.Init(); return this } function u(a) { _images.current = a; n() } function C(a) { _images.openCurrent = !0; _images.current = a; n() } function n() { _animation.target = _images.current * _imageMod.space; _imageMod.step = _imageMod.move; _animation.animate || D() } function D() { _animation.animate = !1; if (_animation.target != _imageMod.position) { _animation.animate = !0; var a = 0; _animation.target > _imageMod.position ? a = _animation.target - _imageMod.position : _imageMod.position > _animation.target && (a = _imageMod.position - _animation.target); a <= 3 * _imageMod.move && (_imageMod.step *= 0.75); 0.2 > _imageMod.step && (_imageMod.step = 0.2); _animation.target > _imageMod.position ? (_imageMod.position += _imageMod.step, _imageMod.position > _animation.target && (_imageMod.position = _animation.target)) : (_imageMod.position -= _imageMod.step, _imageMod.position < _animation.target && (_imageMod.position = _animation.target)); E(); _animation.animate && setTimeout(function () { D() }, _animation.speed) } else _images.openCurrent && (_images.openCurrent = !1, v()), _animation.animate = !1 } function E() { for (var a = 0; a < _images.count; a++) _images.list[a].RefreshImage(); o.draw() } function v() { var a = _images.list[_images.current], f = a.spiral_content, e = a.spiral_media; null != d && a.media == d || (null != f || null != e ? (c ? h.html("") : (h = b(document.createElement("div")).addClass("inner"), c = b(document.createElement("div")).addClass("spiral-pop-up").append(h), b("body").prepend(c), _options.useModal && !0 == _options.useModal && (l = b(document.createElement("div")).addClass("spiral-modal"), b("body").prepend(l), l.hide())), _options.useModal && !0 == _options.useModal && (w(), F("on")), i && i.stop(!0, !1).hide(), j && p("off"), d && d.stop(!0, !1).hide(), c.is(":visible") || (h.remove(), h = b(document.createElement("div")).addClass("inner"), c.prepend(h)), b(window).unbind("resize", q).resize(q), c.stop(!0, !1), q(), c.fadeIn("fast", L(a))) : G()) } function q() { c && c.css({ left: b("html").outerWidth() / 2 - c.outerWidth() / 2, top: b("html").outerHeight() / 2 - c.outerHeight() / 2 }); return !1 } function L(a) { var f = a.spiral_media; d && d.hide(); null != f && 0 < f.length && (h.addClass("loading"), null == a.media ? (a.media = b("<img class='media'/>").attr("src", f).load({ image: a }, H), d = a.media) : (d = a.media, H())); return !1 } function H() { h.removeClass("loading"); var a = parseInt(h.css("max-width")), b = parseInt(h.css("max-height")); d.hide(); h.append(d); var e = d.width(), c = d.height(), g = e / c; e > a && (e = a, c = e / g); c > b && (c = b, e = c * g); d.attr("width", e + "px"); d.attr("height", c + "px"); h.animate({ width: e, height: c }, { step: q, complete: M }); return !1 } function M() { d.stop().hide().fadeIn("fast"); j || (j = b(document.createElement("div")).addClass("control").addClass("nav").hide(), c.append(j), I = b(document.createElement("div")).addClass("btn").addClass("prev").click(N), J = b(document.createElement("div")).addClass("btn").addClass("next").click(O), j.append(I).append(J)); j && j.css({ top: c.height() / 2 }); p("on"); i || (i = b(document.createElement("div")).addClass("control").addClass("close").click(G), c.append(i)); i && i.css({ top: -i.height() / 2, left: c.outerWidth() - i.width() / 2 }); i.stop().fadeIn("fast") } function N() { var a = _images.current - 1, b = _images.count; for (p("off"); -1 < b; ) { 0 > a && (a = _images.count - 1); if (null != _images.list[a].spiral_media) { _images.current = a; break } a--; b-- } v(); u(_images.current) } function O() { var a = _images.current + 1, b = _images.count; for (p("off"); -1 < b; ) { a >= _images.count && (a = 0); if (null != _images.list[a].spiral_media) { _images.current = a; break } a++; b-- } v(); u(_images.current) } function p(a) { "on" == a ? (a = !1, _mouse.x > c.offset().left && _mouse.x < c.offset().left + c.outerWidth() && _mouse.y > c.offset().top && _mouse.y < c.offset().top + c.outerHeight() && (a = !0), a && j.fadeIn("fast"), c.hover(function () { j.fadeIn("fast") }, function () { j.hide() })) : "off" == a && (c.unbind(), j.hide()); return !1 } function G() { c.fadeOut(P); F("off"); d = null; return !1 } function P() { i.hide(); b(window).unbind("resize", q); p("off"); return !1 } function w() { l && (l.width(b(window).outerWidth()), l.height(b(window).outerHeight())); return !1 } function F(a) { l && ("on" == a ? (l.stop().fadeIn("fast"), b(window).resize(w)) : "off" == a && (l.stop().fadeOut("fast"), b(window).unbind("resize", w))); return !1 } function B(a, b) { for (var c = 0, d = 0; d <= b; d++) c += a; return c } var r = b(this); r.html(); var k = r.parent(), y = 0, o, t; _options = g.options; _images = g.images; _animation = g.animation; _imageMod = g.imageMod; _spiral = g.spiral; _borders = g.borders; _mouse = { x: 0, y: 0 }; var z, A, s; r.hide(); b.browser.msie ? b(window).load(x(r)) : b(window).load(function () { x(r) }); b.fn.SpiralImages.MoveBy = function (a) { _imageMod.position += a; E() }; b.fn.SpiralImages.MoveNext = function () { _images.current = _images.current < _images.count - 1 ? _images.current + 1 : _images.count - 1; n() }; b.fn.SpiralImages.MovePrev = function () { _images.current = 1 <= _images.current ? _images.current - 1 : 0; n() }; b.fn.SpiralImages.StopAnim = function () { if (_animation.animate) { var a = 1E4, b; if (_animation.target > _imageMod.position) for (var c = 0; c < _images.count; c++) { var d = _images.list[c]; 0 < d._position && d._position < a && (a = d._position, b = d) } else { a *= -1; for (c = 0; c < _images.count; c++) d = _images.list[c], 0 > d._position && d._position > a && (a = d._position, b = d) } b && (_animation.target = b._index * _imageMod.space, _images.current = b._index) } }; b.fn.SpiralImages.MoveFirst = function () { _images.current = 0; n() }; b.fn.SpiralImages.MoveLast = function () { _images.current = _images.count - 1; n() }; b.fn.SpiralImages.MoveToAnd = function (a) { u(a) }; b.fn.SpiralImages.MoveToAndOpen = function (a) { C(a) }; var c, h, d, i, j, I, J, l }) } })(jQuery);